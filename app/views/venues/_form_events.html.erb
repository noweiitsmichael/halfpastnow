<script type="text/javascript">
	$(function() {
		$(".toggle-recurring input").attr('checked', false);

		$(".toggle-recurring input").change(function() {
			$(this).parent().siblings(".new-occurrence").toggle();
			$(this).parent().siblings(".new-recurrence").toggle();
		});

		$(".new-occurrence .field select[name*=4i], .new-occurrence .field select[name*=5i]").val("");

		$(".new-recurrence select[name*=interval]").change(function() {
			$(this).siblings(".recur-parameter").hide();
			switch($(this).val())
			{
				case "0":
					$(this).siblings(".recur-parameter.day").show(); break;
				case "1":
					$(this).siblings(".recur-parameter.day-of-week").show(); break;
				case "2":
					$(this).siblings(".recur-parameter.day-of-month").show(); break;
				case "3":
					$(this).siblings(".recur-parameter.day-of-week").show();
					$(this).siblings(".recur-parameter.week-of-month").show(); break;
			}
		});

		$(".new-recurrence select[name*=interval]").change();
	});
</script>

<% @ordinal = ["th","st","nd","rd","th","th","th","th","th","th"] %>
<% @week = ["sunday", "monday", "tuesday", "wednesday", "thursday", "friday", "saturday"] %>

<%= form_for @venue, :url => "/venues/update/" + @venue.id.to_s do |f| %>
  <% if @venue.errors.any? %>
    <div id="error_explanation">
      <h2><%= pluralize(@venue.errors.count, "error") %> prohibited this venue from being saved:</h2>

      <ul>
      <% @venue.errors.full_messages.each do |msg| %>
        <li><%= msg %></li>
      <% end %>
      </ul>
    </div>
  <% end %>
  <% @i = 0; @venue.events.sort_by{ |event| event.id || 0 }.each do |event| %>
    <%= f.fields_for :events, event do |e| %>
      <div class="main event">
	<%= event.id.nil? ? raw("<h4>New Event</h4>") : "" %>
	<div class="field">
	  <%= e.label :title %>
	  <%= e.text_field :title %>
	</div>
	<div class="field">
	  <%= e.label :description %>
	  <%= e.text_area :description %>
	</div>
	<div class="field">
	  <%= e.label :price %>
	  <%= e.text_field :price, :class => "price" %>
	</div>
	<div class="occurrence recurrence">
		<div class="toggle-recurring">
			<input type="checkbox" id="venue_events_attributes_<%= @i %>_recurring" name="venue[events_attributes][<%= @i %>][recurring]" /> recurring
		</div>
		<div class="new-occurrence">
			<%# TODO fix when we start getting lots of occurrences %> 
			<% @occurrence = event.occurrences.sort_by{ |occurrence| occurrence.id || 0 }.first %>
			<%= e.fields_for :occurrences, @occurrence do |o| %>
			    <div class="field">
			    	<%= o.label :start %><%= o.datetime_select :start, :prompt => {:hour => :hour, :minute => :minute} %>
			    </div>
			    <div class="field">
			    	<%= o.label :end %><%= o.datetime_select :end, :prompt => {:hour => :hour, :minute => :minute} %>
			    </div>
			<% end %>
		</div>
		<div class="new-recurrence" style="display:none;">
			<%# TODO fix when we start getting lots of recurrences %>
			<% @recurrence = event.recurrences.sort_by{ |recurrence| recurrence.id || 0 }.first %>
			<%= e.fields_for :recurrences, @recurrence do |r| %>
				<%= r.select :interval, ["Daily","Weekly","Monthly (by day)", "Monthly (by week/day)"].zip((0..3).to_a) %>:&nbsp;&nbsp;
				<%= r.select :every_other, ((1..7).to_a.map{|num| "Every " + ((num == 1) ? "" : (num == 2) ? "other" : to_ordinal(num))}).zip((0..6).to_a) %>
				<div class="recur-parameter day">day</div>
				<div class="recur-parameter week-of-month"><%= r.select :week_of_month, [["[nth]",nil]] + ((1..4).to_a.map{|day| to_ordinal(day)}).zip((1..4).to_a), :selected => nil %></div>
				<div class="recur-parameter day-of-week"><%= r.select :day_of_week, [["[nday]",nil]] + Date::DAYNAMES.zip((0..6).to_a), :selected => nil %></div>
				<div class="recur-parameter day-of-month"><%= r.select :day_of_month, [["[nth]",nil]] + (((1..31).to_a.map{|day| to_ordinal(day)}).zip((1..31).to_a)), :selected => nil %></div>
				<div class="field">
			    	<%= r.label :start %><%= r.time_select :start, :prompt => {:hour => :hour, :minute => :minute} %>
			    </div>
			    <div class="field">
			    	<%= r.label :end %><%= r.time_select :end, :prompt => {:hour => :hour, :minute => :minute} %>
			    </div>
			<% end %>
		</div>
	</div>
	<% event.occurrences.sort_by{ |occurrence| occurrence.id || 0 }.each do |occurrence| %>
	  <%= e.fields_for :occurrences, occurrence do |o| %>
	    <%# TODO fix when we start getting lots of recurrences %> 
	    <% if occurrence.recurrence.nil? && !occurrence.id.nil? %>
		    <div class="occurrence">
			    <div class="field">
			    	<%= o.label :start %><%= o.datetime_select :start, :prompt => {:hour => :hour, :minute => :minute}  %>
			    </div>
			    <div class="field">
			    	<%= o.label :end %><%= o.datetime_select :end, :prompt => {:hour => :hour, :minute => :minute}  %>
			    </div>
				<div class="remove">
					<%= o.check_box :_destroy %>
					<%= o.label :_destroy, "remove occurrence" %>
				</div>
			</div>
		<% end %>
	  <% end %>
	<% end %>
	<% event.recurrences.sort_by{ |recurrence| recurrence.id || 0 }.each do |recurrence| %>
	  <%= e.fields_for :recurrences, recurrence do |r| %>
	    <% unless (recurrence.id.nil?) %>
		    <div class="recurrence">
		    	<span><%= "every " + ((recurrence.every_other.nil? || recurrence.every_other == 0) ? "" : ((recurrence.every_other == 1) ? "other" : to_ordinal(recurrence.every_other))) %></span>
		    	<span><%= (recurrence.day_of_week && recurrence.week_of_month) ? to_ordinal(recurrence.week_of_month) + " " + week[recurrence.day_of_week] : (recurrence.day_of_month ? to_ordinal(recurrence.day_of_month) : (recurrence.day_of_week ? week[recurrence.day_of_week] : "day")) %></span>
		    	<span>from <%= recurrence.start.to_time.strftime("%I:%M%P") %></span>
		    	<span>to <%= recurrence.end.to_time.strftime("%I:%M%P") %></span>
			    <div class="remove">
					<%= r.check_box :_destroy %>
					<%= r.label :_destroy, "remove recurrence" %>
				</div>
		    </div>
	    <% end %>
	  <% end %>
	<% end %>
	<% if false %><div class="field">
		      <%= r.label :day_of_week %>
		      <%= r.select :day_of_week, Date::DAYNAMES.zip((0..6).to_a) %>
		    </div><% end %>
	
	<% if !event.id.nil? %>
	  <div class="remove">
	    <%= e.check_box :_destroy %>
	    <%= e.label :_destroy, "remove event" %>
	  </div>
	<% end %>
      </div>
    <% end %>
    <% @i += 1 %>
  <% end %>
  <div class="actions">
    <%= f.submit %>
  </div>
<% end %>
