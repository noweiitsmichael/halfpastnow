<% content_for :code do %>
<%# TODO: put this stuff in the controller eventually %>
	<% 	@now = DateTime.now.change(:hour => 0)
		@channels = current_user ? current_user.channels.sort_by { |channel| channel.created_at } : Channel.default_channels %>

	<script type="text/javascript">

		var geocoder;
		var map;
		var markers = [];

		function initialize() {
			//console.log("initialize");
			//$("#map").height($(window).height() - $("#map").offset().top - 2 * parseInt($("#map").css("border-top-width")));
			geocoder = new google.maps.Geocoder();

			var styles = [
			    {
			      stylers: [
			        { saturation: 0 },
			        { invert_lightness: false },
			        { gamma: 1 },
			        { lightness: 0 }
			      ]
			    }];

			var latlng = new google.maps.LatLng(<%= @lat %>, <%= @long %>);
			var myOptions = {
				zoom: <%= @zoom %>,
				center: latlng,
				mapTypeId: 'map_style',
				disableDefaultUI: true,
				zoomControl: true,
				scrollwheel: false,
				zoomControlOptions: { position: google.maps.ControlPosition.TOP_LEFT, style: google.maps.ZoomControlStyle.LARGE }
			};

			var styledMap = new google.maps.StyledMapType(styles,
    			{name: "Styled Map"});

			map = new google.maps.Map($("#map")[0], myOptions);

			map.mapTypes.set('map_style', styledMap);
  			map.setMapTypeId('map_style');

			var locations = [];
			
			$("#content .main .inner .events li").each(function(index) {
				var latitude = parseFloat($(this).find(".latitude").html());
				var longitude = parseFloat($(this).find(".longitude").html());
				locations.push({lat: latitude, long: longitude});
			});
			
			placeMarkers({points: locations});

			google.maps.event.addListener(map, 'idle', boundsChanged);
		}

		function to_i(obj) {
			return parseInt(obj);
		}

			Galleria.loadTheme('/assets/galleria.classic.min.js');

	</script>
<% end %>

<% content_for :header do %>
	<div class="titlebar">
		<div class="stay-on-target">
			<h1><%= @bookmarkList.name %></h1>
		</div>
	</div>
<% end %>

<% content_for :body do %>
	<div id="content" class="pick-content">
		<div id="map-wrapper">
			<div id="map"></div>
			<!-- <div class="map-move">
				<input type="checkbox" checked id="unnecessarily-long-id-for-toggling-search-on-map-move-and-zoom"/> redo search based on map
			</div> -->
		</div>
		<div class="main">
			<div class="inner">
				<div class="picks-info">
					<img class="picture" src="/assets/picklist-placeholder.png" />
					<div class="picks-details">
						<div class="title"><%= @bookmarkList.name %></div>
						<div class="description"><%= @bookmarkList.description %></div>
					</div>
				</div>
				<ul class="events">
					<%= render :partial => "events/event_list", :locals => { :occurrences => @occurrences } %>
				</ul>
				<img src="/assets/infinite-loader.gif" id="infinite-loader" style="display:none;" />
			</div>
		</div>
	</div>
<% end %>

<% content_for :overlay do %>
	<div class="mode">
		<div class="overlay">
			<div class="insert-point">
				<div class="window">
				</div>
			</div>
		</div>
	</div>
<% end %>
