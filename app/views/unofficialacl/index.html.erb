
<div class="content">
  <%= render 'row_header', locals: {occurrences: @occurrences} %>
  <div class="content tab search_content" id="tab-1">
  <%= render 'default_venues' %>
  <%#= render 'results', locals: {occurrences: @occurrences} %>
  </div>
  <div class="footer row">
    <div class="small-6 small-centered columns by-center">
      <div id="loaderImage" class="mbl"></div>
      <div id="footer_text">loading more content</div>
      <div id="footer_text_end" class="hide">2013 Unofficial ACL - All Rights Reserved</div>
    </div>
  </div>
</div>


<%= hidden_field_tag :and_tags, params[:and_tags] %>
<%= hidden_field_tag :next_page, @occurrences.next_page %>
<%= hidden_field_tag :total_pages, @occurrences.total_pages %>
<%= hidden_field_tag :two_pages, "true" %>

<style>
    .scrollup{
        width:40px;
        height:40px;
        /*opacity:0.3;*/
        position:fixed;
        bottom:50px;
        right:100px;
        display:none;
        text-indent:-9999px;
        background: url('/assets/acl/icon_top.png') no-repeat;
    }
</style>

<script>


    $(window).scroll(function () {

        if ($(this).scrollTop() > 100) {
            $('.scrollup').fadeIn();
        } else {
            $('.scrollup').fadeOut();
        }

        if ($(window).scrollTop() == $(document).height() - $(window).height()) {

            var next_page = $('#next_page').val();
            next_page = parseInt(next_page);
            var total_pages = $('#total_pages').val();
            total_pages = parseInt(total_pages);
            var and_tags = $('#and_tags').val();

            if((total_pages==2) && ($('#two_pages').val()=="true"))
            {
                append_data(next_page,and_tags);
                $('#two_pages').val("false");
            }

            if (next_page < total_pages) {
                append_data(next_page,and_tags);
            } else{
                $('.footer').hide();
            }
        }

    });

    function append_data(page,and_tags) {

        $.post('/unofficialacl/search', {page: page,and_tags: and_tags},
                function () {
                }, 'script');
        return false;
    }

    $('.scrollup').on('click',function(){
        $("html, body").animate({scrollTop: '0px' }, 1500);
        return false;
    });
</script>

<script>
    var geocoder;
    var map;
    var markers = [];
    var tags = {};
    var channelFilters = {};

//    $(window).load(function() {
//        if(typeof initialize !== 'undefined')
//            initialize();
//    });

function initialize() {
//console.log("initialize");
//$("#map").height($(window).height() - $("#map").offset().top - 2 * parseInt($("#map").css("border-top-width")));
geocoder = new google.maps.Geocoder();

var styles = [
{
"featureType": "road.highway",
"elementType": "geometry.stroke",
"stylers": [
{ "color": "#804580" }
]
},{
"featureType": "road.highway",
"elementType": "labels.text.stroke",
"stylers": [
{ "color": "#d5b5d5" }
]
},{
"featureType": "road.arterial",
"elementType": "labels.text.stroke",
"stylers": [
{ "color": "#f1e6f3" }
]
},{
"elementType": "geometry.fill",
"stylers": [
{ "gamma": 1.54 },
{ "lightness": 12 }
]
},{
"featureType": "road.arterial",
"elementType": "geometry.fill",
"stylers": [
{ "color": "#e0dae0" }
]
},{
"featureType": "road.arterial",
"elementType": "geometry.stroke",
"stylers": [
{ "color": "#b8abb8" }
]
},{
"featureType": "road.highway",
"elementType": "geometry.fill",
"stylers": [
{ "color": "#af96af" }
]
},{
}
];

var latlng = new google.maps.LatLng(<%= @lat %>, <%= @long %>);
var myOptions = {
zoom: <%= @zoom %>,
center: latlng,
mapTypeId: 'map_style',
disableDefaultUI: true,
zoomControl: true,
scrollwheel: false,
zoomControlOptions: { position: google.maps.ControlPosition.TOP_RIGHT, style: 2 },
backgroundColor: '#FFFFFF'
};

var styledMap = new google.maps.StyledMapType(styles,
{name: "Styled Map"});

map = new google.maps.Map($("#map")[0], myOptions);

map.mapTypes.set('map_style', styledMap);
map.setMapTypeId('map_style');

var locations = [];

$(".row").each(function(index) {
var latitude = parseFloat($(this).find(".latitude").html());
var longitude = parseFloat($(this).find(".longitude").html());
locations.push({lat: latitude, long: longitude});
});

    console.log(locations);


placeMarkers({points: locations});

google.maps.event.addListener(map, 'idle', boundsChanged);
}

</script>