<% content_for :head do %>
  <%= javascript_include_tag "half.dynamics" %>
<% end %>

<% content_for :code do %>
<%# TODO: put this stuff in the controller eventually %>

	<% 	@now = DateTime.now.change(:hour => 0)
		@channels = current_user ? current_user.channels.sort_by { |channel| channel.created_at } : Channel.default_channels %>
	
	<script type="text/javascript">
		//cookie redirect

		
		
		(function ($, document, undefined) {

			var pluses = /\+/g;

			function raw(s) {
				return s;
			}

			function decoded(s) {
				return decodeURIComponent(s.replace(pluses, ' '));
			}

			var config = $.cookie = function (key, value, options) {

				// write
				if (value !== undefined) {
					options = $.extend({}, config.defaults, options);

					if (value === null) {
						options.expires = -1;
					}

					if (typeof options.expires === 'number') {
						var days = options.expires, t = options.expires = new Date();
						t.setDate(t.getDate() + days);
					}

					value = config.json ? JSON.stringify(value) : String(value);

					return (document.cookie = [
						encodeURIComponent(key), '=', config.raw ? value : encodeURIComponent(value),
						options.expires ? '; expires=' + options.expires.toUTCString() : '', // use expires attribute, max-age is not supported by IE
						options.path    ? '; path=' + options.path : '',
						options.domain  ? '; domain=' + options.domain : '',
						options.secure  ? '; secure' : ''
					].join(''));
				}

				// read
				var decode = config.raw ? raw : decoded;
				var cookies = document.cookie.split('; ');
				for (var i = 0, l = cookies.length; i < l; i++) {
					var parts = cookies[i].split('=');
					if (decode(parts.shift()) === key) {
						var cookie = decode(parts.join('='));
						return config.json ? JSON.parse(cookie) : cookie;
					}
				}

				return null;
			};

			config.defaults = {};

			$.removeCookie = function (key, options) {
				if ($.cookie(key) !== null) {
					$.cookie(key, null, options);
					return true;
				}
				return false;
			};

		})(jQuery, document);

		


		$(function() {
		  var COOKIE_NAME = 'splash-page';
		  var cookie = $.cookie(COOKIE_NAME);
		  if (cookie == null) {
		    $.cookie(COOKIE_NAME, true, { path: '/', expires: 9001 });
		    window.location = "/events/new_splash";
		  }
		  else {
		  }
		});


		var geocoder;
		var map;
		var markers = [];
		var tags = {};
		var channelFilters = {};

		var filter = {
		  start_days: <%= params[:start_days].coalesce_to 0 %>,
		  end_days: isNaN(parseInt("<%= params[:end_days] || 0 %>")) ? "<%= params[:end_days] %>" : <%= params[:end_days].coalesce_to 0 %>,
		  start_seconds: <%= params[:start_seconds].coalesce_to "''" %>,
		  end_seconds: <%= params[:end_seconds].coalesce_to "''" %>,
		  day: [0,1,2,3,4,5,6],
		  low_price: <%= params[:low_price].coalesce_to "''" %>,
		  high_price: <%= params[:high_price].coalesce_to "''" %>,
		  included_tags: <%= params[:included_tags] ? "[" + (params[:included_tags] * ",") + "]" : "[]" %>,
		  excluded_tags: <%= params[:excluded_tags] ? "[" + (params[:excluded_tags] * ",") + "]" : "[]" %>,
		  and_tags: <%= params[:and_tags] ? "[" + (params[:and_tags] * ",") + "]" : "[]" %>,
		  lat_min: "",
		  lat_max: "",
		  long_min: "",
		  long_max: "",
		  offset: 0,
		  search: "",
		  sort: <%= params[:sort].coalesce_to 0 %>,
		  name: "<%= params[:name].coalesce_to "" %>",
		  start_date: "",
		  end_date: ""
		};

		function initialize() {
			//console.log("initialize");
			//$("#map").height($(window).height() - $("#map").offset().top - 2 * parseInt($("#map").css("border-top-width")));
			geocoder = new google.maps.Geocoder();

			var styles = [
							  {
							    "featureType": "road.highway",
							    "elementType": "geometry.stroke",
							    "stylers": [
							      { "color": "#804580" }
							    ]
							  },{
							    "featureType": "road.highway",
							    "elementType": "labels.text.stroke",
							    "stylers": [
							      { "color": "#d5b5d5" }
							    ]
							  },{
							    "featureType": "road.arterial",
							    "elementType": "labels.text.stroke",
							    "stylers": [
							      { "color": "#f1e6f3" }
							    ]
							  },{
							    "elementType": "geometry.fill",
							    "stylers": [
							      { "gamma": 1.54 },
							      { "lightness": 12 }
							    ]
							  },{
							    "featureType": "road.arterial",
							    "elementType": "geometry.fill",
							    "stylers": [
							      { "color": "#e0dae0" }
							    ]
							  },{
							    "featureType": "road.arterial",
							    "elementType": "geometry.stroke",
							    "stylers": [
							      { "color": "#b8abb8" }
							    ]
							  },{
							    "featureType": "road.highway",
							    "elementType": "geometry.fill",
							    "stylers": [
							      { "color": "#af96af" }
							    ]
							  },{
							  }
							];

			var latlng = new google.maps.LatLng(<%= @lat %>, <%= @long %>);
			var myOptions = {
				zoom: <%= @zoom %>,
				center: latlng,
				mapTypeId: 'map_style',
				disableDefaultUI: true,
				zoomControl: true,
				scrollwheel: false,
				zoomControlOptions: { position: google.maps.ControlPosition.TOP_RIGHT, style: 2 },
    			backgroundColor: '#FFFFFF'
			};

			var styledMap = new google.maps.StyledMapType(styles,
    			{name: "Styled Map"});

			map = new google.maps.Map($("#map")[0], myOptions);

			map.mapTypes.set('map_style', styledMap);
  			map.setMapTypeId('map_style');

			var locations = [];
			
			$("#content .main .inner .events li").each(function(index) {
				var latitude = parseFloat($(this).find(".latitude").html());
				var longitude = parseFloat($(this).find(".longitude").html());
				locations.push({lat: latitude, long: longitude});
			});
			
			placeMarkers({points: locations});

			google.maps.event.addListener(map, 'idle', boundsChanged);
		}

		function to_i(obj) {
			return parseInt(obj);
		}

		$(function() {
			<% @channels.each do |channel| %>
				channelFilters[<%= channel.id %>] = {
				  stream_id: <%= channel.id %>,
				  start_days: <%= channel.start_days || 0 %>,
				  end_days: <%= channel.end_days || 0 %>,
				  start_seconds: <%= channel.start_seconds || "''" %>,
				  end_seconds: <%= channel.end_seconds || "''" %>,
				  day: <%= channel.day_of_week ? "'" + channel.day_of_week + "'.split(',').map(to_i)" : "[]" %>,
				  low_price: <%= channel.low_price || "''" %>,
				  high_price: <%= channel.high_price || "''" %>,
				  included_tags: <%= channel.included_tags ? "'" + channel.included_tags + "'.split(',')" : "[]" %>,
				  excluded_tags: <%= channel.excluded_tags ? "'" + channel.excluded_tags + "'.split(',')" : "[]" %>,
				  and_tags: <%= channel.and_tags ? "'" + channel.and_tags + "'.split(',')" : "[]" %>,
				  lat_min: "",
				  lat_max: "",
				  long_min: "",
				  long_max: "",
				  offset: 0,
				  search: "<%= channel.search || "" %>",
				  sort: <%= channel.sort || 0 %>,
				  name: "<%= channel.name || "" %>",
				  start_date: "<%= channel.start_date ? channel.start_date.to_s : "" %>",
				  end_date: "<%= channel.end_date ? channel.end_date.to_s : "" %>"
				};
			<% end %>

    		channelFilters[0] = { 
    			  stream_id: "",
				  start_days: 0,
				  end_days: 0,
				  start_seconds: '',
				  end_seconds: '',
				  day: [0,1,2,3,4,5,6],
				  low_price: '',
				  high_price: '',
				  included_tags: [],
				  and_tags: [],
				  excluded_tags: [],
				  lat_min: "",
				  lat_max: "",
				  long_min: "",
				  long_max: "",
				  offset: 0,
				  search: "",
				  name: "",
				  start_date: "",
				  end_date: "",
				  sort: 0 };

			<% @tagCounts.each do |tagCount| %>
			tags['<%= tagCount[:id] %>'] = 
				{ name: "<%= tagCount[:name] %>",
				  parent_id: <%= tagCount[:parent] ? "'#{tagCount[:parent][:id]}'" : 'null' %>,
				  <% children = tagCount[:children].collect { |child| "'#{child[:id]}'" } * ',' %>
				  child_ids: [<%= children %>]
				}
			<% end %>

			// var event_id = <%= params[:event_id] || "null" %>;
			var venue_id = <%= params[:venue_id] || "null" %>;
			var act_id = <%= params[:act_id] || "null" %>;
			var modality;

			// if(event_id) {
			// 	modality = spawn(modalities["event"],{id: event_id});
			// 	modal(modality);
			// }
			if(venue_id) {
				modality = spawn(modalities["venue"],{id: venue_id});
				modal(modality);
			}
			if(act_id) {
				modality = spawn(modalities["act"],{id: act_id});
				modal(modality);   
			}

	      $( '*' ).tooltip({ position: { my: "left+15 center", at: "right center" } });
	      $('.head-title').tooltip('disable');
	      $('.icon-check').tooltip('disable');
	      $('.icon-check-empty').tooltip('disable');

		});

		$(window).load(function() {
			var stream_id = "<%= params['channel_id'] %>";
			if(stream_id !== "") {
				// $('#header').addClass('selected');
				$(".streambar .stream[stream-id=" + stream_id + "]").addClass('selected');
				filter.stream_id = parseInt(stream_id);
				filter.included_tags = channelFilters[parseInt(stream_id)].included_tags;
				updateViewFromFilter();
			}
		});
		$('.button-filter').click(function() {
			console.log("Clickeddd");
			// if (toggle) {
			// 	$('.popup-filter').hide();
				
			// }
			// else {
			// 	$('.popup-filter').show();
				
			// }
			// toggle = !toggle;
			
			

			// $('.bookmark-share .comment-tp .popup-box').hidden;
		});
	</script>
<% end %>

<% content_for :header do %>
	<%#= render :partial => "layouts/font_select" %>
    

	
	<div class="expandobar">
		<div class="subbar">
			<div class="sort-by">Sorted by <span class="sort selected" sort-type="popularity">popularity</span> / <span class="sort" sort-type="date">date</span></div>
			<div class="num-occurrences">showing <span class="num-occurrences-count"><%= @allOccurrences.size %></span> events</div>
		</div>
		<div class="expandobar-inner">
			<span>&#9660;</span>show advanced options<span>&#9660;</span>
		</div>
	</div>
<% end %>

<% content_for :body do %>

		<% if (@mobileMode) || true %> 
			<div class="androidMessage"><%= @message %></div>
			<div class="filterTitle"> Choose your filter :</div>
		<% end%>
		<div id="content">
		<div>
			<% puts "Switch$$$$$$$$$$$$$$$$$"%>
			<% puts params[:type] %>
			
			<% if params[:type].to_s.eql? "sxsw" %>
				<div class="button-access">
					<select name="mydropdown" id="access" >
						<option value="0" selected>A Badge</option>
						<option value="1">A Wristband</option>
						<option value="2">No SXSW Credentials (RSVP OK)</option>
						<option value="3">Nothin' but my cowboy boots</option>
					</select>
				</div>
				<div class="button-time" >
					<select name="timedropdown" id="time">
						<option value="0" selected>All</option>
						<option value="1">Interactive (3/8-3/12)</option>
						<option value="2">Film (3/8-3/16)</option>
						<option value="3">Music (3/12-3/17)</option>
					</select>
				</div>

				
				<div class="button-tag" >
					<select name="tagdropdown" id="tag" multiple="multiple" >
						<option value="0" selected>Free Drinks</option>
						<option value="1" selected>Free Food</option>
						<option value="2" selected>Party</option>
						<option value="3" selected >No Cover</option>
						<option value="4" selected>Unofficial</option>
						<option value="5">RSVP</option>
					</select>
				</div>
				<div class="button-sort" >
					<select name="sortdropdown" id="sort">
						<option value="0" selected>Most views</option>
						<option value="1">Date</option>
					</select>
				</div>
				
				<div class="button-search"><span>Search</span>
				
				</div>
			<% else %>
				
				<div class="button-categories">
					<select name="categoriesmenu" id="categories" multiple="multiple" >
						
						<% @parentTags.each do |parentTag|  %>
							<% unless parentTag.name == "Tags" %>
								<% puts "Parent Tag name: "%>
								<% puts parentTag.name %>
								<% if parentTag.childTags.size > 0 %>
									<option value="<%= parentTag.id %>" >
										<%= parentTag.name %>
									</option>
									<optgroup label="<%= parentTag.name %>" >
										<% parentTag.childTags.each do |childTag |%>
											<option value="<%= childTag.id %>"> 
												<%= childTag.name %>
											</option>
										<% end %>
									</optgroup>
								
								<% end %>
							<% end %>
						<% end %>
					</select>
				</div>
				<div class="button-tags">
					<select name="tagsmenu" id="tags" multiple="multiple">
						<% andTags = @parentTags.select { |t| t[:name] == "Tags" }.first %>

						
							<% unless andTags.nil? %>
								<% andTags.childTags.sort { |a,b| a.name <=> b.name }.each do |childTagCount| %>

									<option value="<%= childTagCount.id %>"> 
												<%= childTagCount.name %>
									</option>
								
							<% end %>
						<% end %>
					</select>
				</div>
				<div class="button-day">
					<select name="daysmenu" id="dayAd">
						<option value="0">No time limit</option>
						<option value="1">Today</option>
						<option value="2">Tomorrow</option>
						<option value="3">Weekend</option>
					</select>
				</div>
				<div class="button-cost">
					<select name="costsmenu" id="cost">
						<option value="0">No price limit</option>
						<option value="1">Free</option>
						<option value="2">< $10</option>
						<option value="3">< $20</option>
					</select>
				</div>
				<div class="button-sort-ad" >
					<select name="sortdropdown" id="sortAd">
						<option value="0" selected>Most views</option>
						<option value="1">Date</option>
					</select>
				</div>
				<div class="button-search-ad"><span>Search</span>
				
				</div>
			<% end %>
			<!-- <a class="button sort" href="#"><span>Sort</span></a>
			<a class="button search" href="#"><span>Search</span></a> -->
		</div>
		<div class="main">

			<% if (@mobileMode) %> </center> <input type="hidden" id="androidStatus" name="msg" value="1" style="display:none"/> 
			<% else %> </center> <input type="hidden" id="androidStatus" name="msg" value="0" style="display:none"/> 
			<% end %>
			
			<div class="inner android">
				<div class="filter-summary">
					<span class="end-block"></span> <span class="num-events"><%= @allOccurrences.size %></span> <span class="filter price" style="display:none;"></span> </span> <span class="filter andtags" style="display:none;"></span> <span class="filter tags" style="display:none;"></span> <span class="filter search" style="display:none;"></span> events <span class="sort-type" style="display:none;">[by popularity/<span class="sort date">date</span>]</span> 
				</div>
				<ul class="events">
					<div class="digg_pagination">
					
					<%= render :partial => "event_list", :locals => { :occurrences => @occurrences, :offset => @offset } %>
					<% if @occurrences.size > 0 %>
						<%= will_paginate @occurrences, :style => 'width : 950px' %>
					</div>
					<% end %>
					
				</ul>
				<img src="/assets/infinite-loader.gif" id="infinite-loader" style="display:none;" />
			</div>

			<% if (@mobileMode) %> <center> <% end %>
			<img id="loading" src="/assets/ajax-loader.gif" />
		</div>
		
		
		
		
		<%#= render :partial => "layouts/grid" %>
	</div>
<% end %>


